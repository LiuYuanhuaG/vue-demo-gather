{"version":3,"file":"js/978.3d6775c5.js","mappings":"srBAgEA,IAAIA,EAAgB,EAEhBC,GAAeC,EAAAA,EAAAA,IAAS,GAExBC,GAASC,EAAAA,EAAAA,IAAIC,EAAMC,OAEnBC,GAAOH,EAAAA,EAAAA,IAAIC,EAAMG,KAEjBC,GAAYP,EAAAA,EAAAA,IAASG,EAAMK,UAE3BC,GAASP,EAAAA,EAAAA,MAGTQ,GAAgBR,EAAAA,EAAAA,IAAI,GAGxB,SAASS,IACP,OAAOR,EAAMS,IAAIC,OAASN,CAC3B,CAGD,SAASO,IACP,MAAQ,iBAAgBf,QACzB,CAED,SAASgB,IACPN,EAAOO,MAAMC,SAAS,CACpBC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEb,CAZDC,QAAQC,IAAIX,KAcZ,MAAMY,GAAeC,EAAAA,EAAAA,IAAS,CAC5BC,IAAK,IACItB,EAAMS,IAAIc,MACfzB,EAAOe,MACPW,KAAKC,IAAIvB,EAAKW,MAAOb,EAAMS,IAAIC,WAKrC,SAASgB,EAAaC,GAEpB,MAAMC,EAAYtB,EAAOO,MAAMe,UAE/B9B,EAAOe,MAAQW,KAAKK,MAAMD,EAAYxB,GAEtCF,EAAKW,MAAQf,EAAOe,MAAQlB,EAE5BC,EAAegC,EAAaA,EAAYxB,CACzC,C,OAED0B,EAAAA,EAAAA,KAAU,KACRZ,QAAQC,IAAIb,EAAOO,MAAMkB,WAAWC,cACpCzB,EAAcM,MAAQP,EAAOO,MAAMkB,WAAWC,cAAgBC,SAASC,gBAAgBF,cAAgBC,SAASE,KAAKH,aAErHrC,EAAgB6B,KAAKY,KAAK7B,EAAcM,MAAQT,GAEhDF,EAAKW,MAAQf,EAAOe,MAAQlB,CAA5B,I,03BCtHF,MAAM0C,EAAc,EAEpB,Q,uDCSA,IAAI5B,GAAMZ,EAAAA,EAAAA,IAAS,IACnB,IAAK,IAAIyC,EAAQ,EAAGA,EAAQ,IAAQA,IAClC7B,EAAI8B,KAAK,CAAEC,GAAIF,EAAOG,MAAO,KAAMC,QAAU,QAAOJ,S,sLCbtD,MAAM,EAAc,EAEpB,O","sources":["webpack://vue-demo-gather/./src/views/InfiniteList/InfiniteList.vue","webpack://vue-demo-gather/./src/views/InfiniteList/InfiniteList.vue?238f","webpack://vue-demo-gather/./src/views/InfiniteList/Index.vue","webpack://vue-demo-gather/./src/views/InfiniteList/Index.vue?eb2b"],"sourcesContent":["<template>\r\n  <div class=\"infinite-list-container\" @scroll=\"scrollEvent\" ref=\"_$refs\">\r\n    <div class=\"scrollTopBtn\" @click=\"scrollToTop\" v-show=\"_end > scrollTopBtnPos\" title=\"回到顶部\">\r\n      <!-- 回到顶部 -->\r\n      <slot name=\"scrollTopBtn\"> <img src=\"@/assets/kk.jpg\" alt=\"\" /></slot>\r\n    </div>\r\n    <div class=\"infinite-list-phantom\" :style=\"{ height: `${listHeight()}px` }\"></div>\r\n    <div class=\"infinite-list\" :style=\"{ transform: getTransform() }\">\r\n      <div class=\"infinite-list-item\" v-for=\"item in _visibleData\" :key=\"item[substitute?.key]\"\r\n        :style=\"{ height: _itemSize + 'px', lineHeight: _itemSize + 'px' }\">\r\n        <!-- 这里可以完全自定义内部 -->\r\n        <slot name=\"content\" :itemData=\"item\">\r\n          <div class=\"left-section\">\r\n            {{ item[substitute?.title] }}\r\n          </div>\r\n          <div class=\"right-section\">\r\n            <div class=\"title\">{{ item[substitute?.title] }}</div>\r\n            <div class=\"desc\">{{ item[substitute?.content] }}</div>\r\n          </div>\r\n        </slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup >\r\nimport { reactive, ref, defineProps, computed, onMounted } from 'vue'\r\n\r\nconst props = defineProps({\r\n  // 获取真实显示列表数据\r\n  arr: {\r\n    type: Array,\r\n    default: () => []\r\n  },\r\n  // 列表item的高度\r\n  itemSize: {\r\n    type: Number,\r\n    default: 50\r\n  },\r\n  // 结束索引\r\n  end: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  // 起始索引\r\n  start: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  //替换数据字段\r\n  substitute: {\r\n    type: Object,\r\n    default: () => ({\r\n      key: 'id',\r\n      title: 'title',\r\n      content: 'content'\r\n    })\r\n  },\r\n  // 回到顶部按钮位置\r\n  scrollTopBtnPos: {\r\n    type: Number,\r\n    default: 200\r\n  }\r\n})\r\n// 可显示的列表项数\r\nlet _visibleCount = 0;\r\n// 偏移量\r\nlet _startOffset = reactive(0);\r\n// 起始索引\r\nlet _start = ref(props.start);\r\n// 结束索引\r\nlet _end = ref(props.end)\r\n// 列表item的高度\r\nlet _itemSize = reactive(props.itemSize)\r\n// 滚动盒子实例\r\nlet _$refs = ref()\r\n\r\n// 可视区域高度\r\nlet _screenHeight = ref(0)\r\n\r\n// 列表总高度\r\nfunction listHeight () {\r\n  return props.arr.length * _itemSize;\r\n}\r\nconsole.log(listHeight());\r\n// 偏移量对应的style\r\nfunction getTransform () {\r\n  return `translate3d(0,${_startOffset}px,0)`;\r\n}\r\n\r\nfunction scrollToTop () {\r\n  _$refs.value.scrollTo({\r\n    top: 0,\r\n    left: 0,\r\n    behavior: 'smooth'\r\n  });\r\n}\r\n\r\nconst _visibleData = computed({\r\n  get: () => {   // 3. 当 name 的值被修改后，触发 get 方法\r\n    return props.arr.slice(\r\n      _start.value,\r\n      Math.min(_end.value, props.arr.length)\r\n    )\r\n  }\r\n})\r\n\r\nfunction scrollEvent (e) {\r\n  // 当前滚动位置\r\n  const scrollTop = _$refs.value.scrollTop;\r\n  // 此时的开始索引\r\n  _start.value = Math.floor(scrollTop / _itemSize);\r\n  // 此时的结束索引\r\n  _end.value = _start.value + _visibleCount;\r\n  // 此时的偏移量\r\n  _startOffset = scrollTop - (scrollTop % _itemSize);\r\n}\r\n\r\nonMounted(() => {\r\n  console.log(_$refs.value.parentNode.clientHeight);\r\n  _screenHeight.value = _$refs.value.parentNode.clientHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n  // 可显示的列表项数\r\n  _visibleCount = Math.ceil(_screenHeight.value / _itemSize);\r\n\r\n  _end.value = _start.value + _visibleCount;\r\n})\r\n\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.scrollTopBtn {\r\n  position: fixed;\r\n  border-radius: 50%;\r\n  font-size: 12px;\r\n  color: #eee;\r\n  /* background: url('@/assets/kk.jpg'); */\r\n  background-size: 100% 100%;\r\n  bottom: 101px;\r\n  right: 30px;\r\n  z-index: 10000;\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  line-height: 50px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n}\r\n\r\n.infinite-list-container {\r\n  margin-top: 10px;\r\n  height: 99%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\n\r\n.infinite-list-phantom {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: -1;\r\n}\r\n\r\n.infinite-list {\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  position: absolute;\r\n  text-align: center;\r\n}\r\n\r\n.infinite-list-item {\r\n  background: white;\r\n  box-shadow: 0 0 10px rgba(144, 144, 144, 0.15);\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* padding: 10px; */\r\n  margin-top: 10px;\r\n}\r\n\r\n\r\n.left-section {\r\n  width: 25%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  color: white;\r\n  background: #6ab6fc;\r\n  border-radius: 10px;\r\n}\r\n\r\n.right-section {\r\n  height: 100%;\r\n  margin-left: 20px;\r\n  flex: 1;\r\n\r\n}\r\n\r\n.title {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  text-align: left;\r\n  height: 14px;\r\n}\r\n\r\n.desc {\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  text-align: left;\r\n  height: 12px;\r\n\r\n}\r\n</style>\r\n","import script from \"./InfiniteList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./InfiniteList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./InfiniteList.vue?vue&type=style&index=0&id=6ab276e0&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"box_L\">\r\n    <!-- <div @click=\"handleClicks('About')\">跳转about</div>\r\n    <div @click=\"handleClicks('AboutCopy')\">跳转AboutCopy</div> -->\r\n    <InfiniteList :arr=\"arr\">\r\n      <template #content=\"{ itemData }\">\r\n        <div>{{ itemData.title }}</div>\r\n      </template>\r\n    </InfiniteList>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport router from '@/router';\r\nimport InfiniteList from './InfiniteList'\r\nimport { reactive } from 'vue';\r\nlet arr = reactive([])\r\nfor (let index = 0; index < 100000; index++) {\r\n  arr.push({ id: index, title: '坤坤', content: `坤坤吃了 ${index} /碗` })\r\n}\r\n\r\nconst handleClicks = (path) => {\r\n  console.log(path);\r\n  router.push(`/about/${path}`)\r\n}\r\n\r\n</script>\r\n<style lang=\"scss\">\r\n.box_L {\r\n  height: 100%;\r\n}\r\n</style>","import script from \"./Index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=61d59bfe&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_visibleCount","_startOffset","reactive","_start","ref","props","start","_end","end","_itemSize","itemSize","_$refs","_screenHeight","listHeight","arr","length","getTransform","scrollToTop","value","scrollTo","top","left","behavior","console","log","_visibleData","computed","get","slice","Math","min","scrollEvent","e","scrollTop","floor","onMounted","parentNode","clientHeight","document","documentElement","body","ceil","__exports__","index","push","id","title","content"],"sourceRoot":""}